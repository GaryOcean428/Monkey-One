#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Exit on any error
set -e

# Validate commit message format
echo "üìù Validating commit message..."

# Read the commit message
commit_message=$(cat "$1")

# Check if commit message follows conventional commits format
if ! echo "$commit_message" | grep -qE "^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}"; then
  echo "‚ùå Invalid commit message format!"
  echo ""
  echo "Commit message should follow Conventional Commits format:"
  echo "  <type>[optional scope]: <description>"
  echo ""
  echo "Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert"
  echo ""
  echo "Examples:"
  echo "  feat: add user authentication"
  echo "  fix(api): resolve memory leak in agent processing"
  echo "  docs: update installation guide"
  echo ""
  exit 1
fi

# Check commit message length
if [ ${#commit_message} -gt 72 ]; then
  echo "‚ö†Ô∏è  Commit message is longer than 72 characters. Consider shortening it."
fi

echo "‚úÖ Commit message format is valid!"