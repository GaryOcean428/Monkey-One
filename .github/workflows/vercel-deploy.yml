name: Deploy to Vercel

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'pull_request' ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.head.repo.fork == false &&
       secrets.VERCEL_TOKEN != '' &&
       secrets.VERCEL_ORG_ID != '' &&
       secrets.VERCEL_PROJECT_ID != '')
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          check-latest: true
          cache: 'pnpm'

      - name: Enable corepack
        run: corepack enable

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.5
          run_install: true

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  Deploy-Production:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          check-latest: true
          cache: 'pnpm'

      - name: Enable corepack
        run: corepack enable

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.5
          run_install: true

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
